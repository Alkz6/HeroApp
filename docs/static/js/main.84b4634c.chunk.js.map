{"version":3,"sources":["components/data/heroes.js","serviceWorker.js","auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","components/ui/NavBar.js","selectors/getHeroesByPublisher.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","components/marvel/MarvelScreen.js","selectors/getHeroesById.js","components/heroes/HeroScreen.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["heroes","Boolean","window","location","hostname","match","AuthContext","createContext","require","types","LoginScreen","history","dispatch","useContext","lastPath","localStorage","getItem","className","onClick","type","payload","name","replace","Navbar","user","useHistory","console","log","to","activeClassName","exact","removeItem","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","MarvelScreen","HeroScreen","heroeId","useParams","length","push","goBack","DcScreen","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","hanldeInputChange","target","prevState","value","useForm","formValues","handleInputChange","heroesFiltered","toLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","onChange","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","pathname","setItem","props","PublicRoute","AppRouter","logged","authReducer","state","action","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.84b4634c.chunk.js","sourcesContent":["export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const { createContext } = require(\"react\");\n\nexport const AuthContext = createContext();","export const types = {\n    LOGIN: '[auth] login',\n    LOGOUT: '[auth] logout',\n}","import React, { useContext } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const LoginScreen = ( { history }) => {\n\n\n    const { dispatch } = useContext( AuthContext );\n\n    // console.log(context);\n\n    const lastPath = localStorage.getItem('lastPath') || '/';\n\n    const handleLogin = () => {\n        // history.push('/');\n        \n        dispatch({\n            type: types.LOGIN,\n            payload: {\n                name: 'Alexis'\n            }\n        });\n\n        history.replace(lastPath);\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <h1 className=\"h1\">Login</h1>\n            <hr className=\"hr\" />\n            <button\n             className=\"btn btn-primary\"\n             onClick={ handleLogin }\n            >\n                Login\n            </button>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n\n    const { user: { name }, dispatch } = useContext( AuthContext );\n\n    const history = useHistory();\n\n    console.log(history);\n\n    const handleLogOut = () => {\n\n        history.replace('/login');\n\n        dispatch({\n            type: types.LOGOUT\n        });\n        localStorage.removeItem('user');\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <span className=\"nav-item nav-link text-info\">\n                        { name }\n                    </span>\n                    <button\n                        className=\"nav-item nav-link btn\" \n                        onClick={handleLogOut}\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","const { heroes } = require(\"../components/data/heroes\");\n\nexport const getHeroesByPublisher = ( publisher ) => {\n\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n\n    if ( !validPublishers.includes(publisher) ){\n        throw new Error(`Publisher \"${ publisher }\" no es correcto.`)\n    }\n\n    return heroes.filter( hero => hero.publisher === publisher );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HeroCard = ({ id, superhero, publisher, alter_ego, first_appearance, characters, }) => {\n    return (\n        <div className=\"card ms-3\" style={ {maxWidth: 540} }>\n            <div className=\"row no-gutters\">\n                <div className=\"col-md-4\">\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero}></img>\n                </div>\n                <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{superhero}</h5>\n                        <p className=\"card-text\">{ alter_ego }</p>\n                        {\n                            ( alter_ego !== characters )\n                            && <p className=\"card-text\"> {characters} </p>\n                        }\n                        <p className=\"card-text\">\n                            <small className=\"text-muted\">{first_appearance}</small>\n                        </p>\n                        <Link to={`./hero/${id}`} className=\"text-danger\" >\n                            Más...\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react';\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\nimport { HeroCard } from './HeroCard';\n\nexport const HeroList = ({ publisher }) => {\n\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [publisher]);\n\n    // const heroes = getHeroesByPublisher(publisher);\n\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            {\n                heroes.map( hero => (\n                    <HeroCard key={ hero.id } {...hero} />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1 className=\"h1\">Marvel Screen</h1>\n            <hr />\n            <HeroList publisher='Marvel Comics' />\n        </div>\n    )\n}\n","const { heroes } = require(\"../components/data/heroes\");\n\nexport const getHeroById = ( id ) => {\n\n    return heroes.filter( hero => hero.id === id );\n}","import React, { useMemo } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { getHeroById } from '../../selectors/getHeroesById';\n\nexport const HeroScreen = ({ history }) => {\n\n    const { heroeId } = useParams();\n\n    // const [ hero ] = getHeroById(heroeId);\n    const [ hero ] = useMemo(() => getHeroById( heroeId ), [heroeId]);\n\n    if (!hero){\n        return <Redirect to=\"/\" />\n    }\n    \n    const {\n        superhero,\n        publisher,\n        alter_ego,\n        first_appearance,\n        characters,\n    } = hero;\n\n    const handleReturn = () => {\n\n        if ( history.length <= 2 ){\n            history.push('/');\n        }else{\n            history.goBack();\n        }\n    }\n\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-4\">\n                <img\n                    src={`../assets/heroes/${heroeId}.jpg`} \n                    className=\"img-thumbnail animate__animated animate__fadeInLeftBig\"\n                    alt={superhero}\n                />\n            </div>\n            <div className=\"col-8 animate__animated animate__fadeIn\">\n                <h3 className=\"h3\">{ superhero }</h3>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"><strong>Alter ego:</strong> { alter_ego }</li>\n                    <li className=\"list-group-item\"><strong>Publisher:</strong> { publisher }</li>\n                    <li className=\"list-group-item\"><strong>First appaearance:</strong> { first_appearance }</li>\n                </ul>\n                <h5 className=\"h5\"> Characters </h5>\n                <p>{characters}</p>\n                <button \n                    onClick={ handleReturn }\n                    className=\"btn btn-outline-dark\">\n                    Return\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1 className=\"h1\">DC Screen</h1>\n            <hr />\n            <HeroList publisher='DC Comics' />\n        </div>\n    )\n}\n","// import React, { useState } from 'react'\nimport React, { useMemo } from 'react';\n\nimport queryString from 'query-string';\n\n// import { heroes } from '../data/heroes';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { useForm } from '../../hooks/useForm';\nimport { useLocation } from 'react-router-dom';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nexport const SearchScreen = ({ history }) => {\n\n    const location = useLocation();\n    const { q = \"\" } = queryString.parse(location.search);\n\n    \n    const [formValues, handleInputChange] =  useForm({\n        search: q\n    });\n    \n    const { search } = formValues;\n\n    // const [heroesFiltered, setHeroes] = useState(getHeroesByName( search ));\n    // const heroesFiltered = getHeroesByName( search );\n    const heroesFiltered = useMemo(() => getHeroesByName( q ), [q]);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        console.log(formValues.search);\n        console.log(formValues.search.length);\n        history.push(`?q=${formValues.search}`);\n        // if (formValues.search.length >= 1){\n        //     setHeroes(previousHeros => {\n        //         return previousHeros.filter(hero => {\n        //             return hero.superhero.toLowerCase().includes(formValues.search.toLowerCase());\n        //         });\n        //     })\n        // }else{\n        //     setHeroes(heroes)\n        // }\n\n    }\n \n    return (\n        <div>\n            <h1>Search Screen</h1>\n\n            <div className=\"row\">\n                <div className=\"col-5\">\n                    <h4>Search Form</h4>\n                    <hr />\n                    <form onSubmit={handleSearch}>\n                        <input \n                            type=\"text\"\n                            placeholder=\"Find your hero\"\n                            name=\"search\"\n                            className=\"form-control\"\n                            onChange={handleInputChange}\n                            value={ search }\n                        />\n                        <button className=\"btn m-1 btn-block btn-outline-primary\">\n                            Search...\n                        </button>\n                    </form>\n                </div>\n                <div className=\"col-7\">\n                    <h4>Results</h4>\n                    <hr />\n                    {\n                        (q === '') && \n                        <div className=\"alert alert-info\">\n                            Search a hero...\n                        </div>\n                    }\n                    {\n                        (q !== '' && heroesFiltered.length === 0) && \n                        <div className=\"alert alert-danger\">\n                            There is not a hero with \"{q}\"\n                        </div>\n                    }\n                    {\n                        heroesFiltered.map(hero => (\n                            <HeroCard \n                                key={ hero.id }\n                                {...hero} \n                            />\n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const hanldeInputChange = ({ target }) => {\n        setValues(prevState => {\n            return {\n               ...prevState,\n             [ target.name ]: target.value\n            }\n        });\n    }\n\n    return [\n        values, hanldeInputChange, reset\n    ]\n\n}","import { heroes } from '../components/data/heroes';\n\nexport const getHeroesByName = ( name = '' ) => {\n    if ( name === ''){\n        return [];\n    \n    }\n    return heroes.filter(hero => {\n        name = name.toLowerCase();\n        return hero.superhero.toLowerCase().includes(name);\n    })\n}","import React from 'react';\nimport { Navbar } from '../components/ui/NavBar';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { HeroScreen } from '../components/heroes/HeroScreen';\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\n\nexport const DashboardRoutes = ( { history } ) => {\n    return (\n        <>\n            <Navbar />\n\n            <div className=\"container mt-3\">\n                <Switch>\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroScreen } />\n                    <Route exact path=\"/dc\" component={ DcScreen } />\n                    <Route exact path=\"/search\" component={ SearchScreen } />\n                    <Redirect to=\"/marvel\" />\n                </Switch>\n                \n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest\n}) => {\n\n    const { location: { pathname = '/', search = '' } } = rest;\n    console.log(rest);\n    localStorage.setItem('lastPath', `${pathname}${search}`);\n\n    return (\n        <Route \n            {...rest}\n            component={ (props) =>(\n                    (isAuthenticated) ? \n                        <Component {...props} />\n                        : \n                        <Redirect to=\"/login\" />\n                )\n            }\n        />\n    )\n}\n\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest\n}) => {\n    return (\n        <Route \n            {...rest}\n            component={ (props) =>(\n                    (!isAuthenticated) ? \n                        <Component {...props} />\n                        : \n                        <Redirect to=\"/\" />\n                )\n            }\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom';\n\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { PrivateRoute } from './PrivateRoute';\nimport { AuthContext } from '../auth/AuthContext';\nimport { PublicRoute } from './PublicRoute';\n\nconst AppRouter = () => {\n\n    const { user: { logged } } = useContext( AuthContext );\n\n    return (\n      <Router>\n        <div>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            {/* <Route exact path=\"/login\" component={ LoginScreen } /> */}\n            <PublicRoute \n              exact\n              path='/login'\n              component={ LoginScreen }  \n              isAuthenticated={ logged } \n            />\n            {/* <Route path=\"/\" component={ DashboardRoutes  } /> */}\n            <PrivateRoute\n              path=\"/\"\n              component={DashboardRoutes} \n              isAuthenticated={ logged } \n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n}\nexport default AppRouter;","import { types } from \"../types/types\";\nimport { act } from \"react-dom/test-utils\";\n\n// const state = {\n//     name: 'Alexis',\n//     logged: true\n// }\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.LOGIN:\n            console.log('HERE!')\n            return {\n                ...action.payload,\n                logged: true\n            }\n        case types.LOGOUT:\n            return {\n                logged: false\n            }\n    \n        default:\n            return state\n    }\n}\n","import React, { useReducer, useEffect } from 'react'\nimport AppRouter from './routers/AppRouter'\nimport { AuthContext } from './auth/AuthContext'\nimport { authReducer } from './auth/authReducer';\n\nconst init = () => {\n    return JSON.parse(localStorage.getItem('user')) || {logged : false}\n}\n\nexport const HeroesApp = () => {\n\n    const [user, dispatch] = useReducer(authReducer, {}, init);\n\n    useEffect(() => {\n        localStorage.setItem('user', JSON.stringify(user));\n    }, [ user ])\n\n    return (\n        <AuthContext.Provider value={{ user, dispatch }}>\n            <AppRouter />\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n    <HeroesApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}